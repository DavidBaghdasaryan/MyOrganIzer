// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyOrganizer.Wpf.Data;

#nullable disable

namespace MyOrganizer.Wpf.Migrations.Sqlite
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20251024165536_InitSqlite")]
    partial class InitSqlite
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.10");

            modelBuilder.Entity("MyOrganizer.Wpf.Data.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateDobleJoin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<DateTime>("DateJoin")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue(new DateTime(1900, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified));

                    b.Property<decimal?>("Debet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("MidlName")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Clients", (string)null);
                });

            modelBuilder.Entity("MyOrganizer.Wpf.Data.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Count")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("MyOrganizer.Wpf.Data.Entities.Tooth", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Byugel")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Endo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Implantzr")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Implmk")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Mk30")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Plomb")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Protez")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Rest")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Shift")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ToothNumber")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<bool>("Up")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Zrkemax")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ClientId", "ToothNumber")
                        .HasDatabaseName("IX_Teeth_Client_ToothNumber");

                    b.ToTable("Teeth", (string)null);
                });

            modelBuilder.Entity("MyOrganizer.Wpf.Entities.Languages.L10nKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Group")
                        .HasColumnType("TEXT");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Key")
                        .IsUnique();

                    b.ToTable("L10nKeys");
                });

            modelBuilder.Entity("MyOrganizer.Wpf.Entities.Languages.L10nValue", b =>
                {
                    b.Property<int>("KeyId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Lang")
                        .HasColumnType("TEXT");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(2000)
                        .HasColumnType("TEXT");

                    b.HasKey("KeyId", "Lang");

                    b.ToTable("L10nValues");
                });

            modelBuilder.Entity("MyOrganizer.Wpf.Entities.Languages.Language", b =>
                {
                    b.Property<string>("Code")
                        .HasMaxLength(5)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.HasKey("Code");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("MyOrganizer.Wpf.Entities.Procedures.Procedure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Procedures", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsActive = true,
                            Name = "Removable Partial Denture (Metal Framework)"
                        },
                        new
                        {
                            Id = 2,
                            IsActive = true,
                            Name = "Full Denture"
                        },
                        new
                        {
                            Id = 3,
                            IsActive = true,
                            Name = "Implant with Zirconia Crown"
                        },
                        new
                        {
                            Id = 4,
                            IsActive = true,
                            Name = "Implant with Metal-Ceramic Crown"
                        },
                        new
                        {
                            Id = 5,
                            IsActive = true,
                            Name = "Zirconia or E-max Crown"
                        },
                        new
                        {
                            Id = 6,
                            IsActive = true,
                            Name = "Metal-Ceramic Crown"
                        },
                        new
                        {
                            Id = 7,
                            IsActive = true,
                            Name = "Composite or Inlay Restoration"
                        },
                        new
                        {
                            Id = 8,
                            IsActive = true,
                            Name = "Filling (Composite / Amalgam)"
                        },
                        new
                        {
                            Id = 9,
                            IsActive = true,
                            Name = "Work Shift / Appointment Slot"
                        },
                        new
                        {
                            Id = 10,
                            IsActive = true,
                            Name = "Endodontic Treatment (Root Canal)"
                        });
                });

            modelBuilder.Entity("MyOrganizer.Wpf.Entities.Procedures.ProcedurePrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<int>("ProcedureId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Tier1")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tier2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tier3")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ProcedureId");

                    b.ToTable("ProcedurePrices", (string)null);
                });

            modelBuilder.Entity("MyOrganizer.Wpf.Entities.Technic", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Technics", (string)null);
                });

            modelBuilder.Entity("MyOrganizer.Wpf.Entities.ToothWork", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ClientId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("Price")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProcedureName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Tier")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ToothFdi")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ToothWorks", (string)null);
                });

            modelBuilder.Entity("MyOrganizer.Wpf.Data.Entities.Tooth", b =>
                {
                    b.HasOne("MyOrganizer.Wpf.Data.Entities.Client", "Client")
                        .WithMany("ClientTooths")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("MyOrganizer.Wpf.Entities.Languages.L10nValue", b =>
                {
                    b.HasOne("MyOrganizer.Wpf.Entities.Languages.L10nKey", "Key")
                        .WithMany("Values")
                        .HasForeignKey("KeyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Key");
                });

            modelBuilder.Entity("MyOrganizer.Wpf.Entities.Procedures.ProcedurePrice", b =>
                {
                    b.HasOne("MyOrganizer.Wpf.Entities.Procedures.Procedure", "Procedure")
                        .WithMany("Prices")
                        .HasForeignKey("ProcedureId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Procedure");
                });

            modelBuilder.Entity("MyOrganizer.Wpf.Data.Entities.Client", b =>
                {
                    b.Navigation("ClientTooths");
                });

            modelBuilder.Entity("MyOrganizer.Wpf.Entities.Languages.L10nKey", b =>
                {
                    b.Navigation("Values");
                });

            modelBuilder.Entity("MyOrganizer.Wpf.Entities.Procedures.Procedure", b =>
                {
                    b.Navigation("Prices");
                });
#pragma warning restore 612, 618
        }
    }
}
