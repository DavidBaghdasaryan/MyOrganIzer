<!-- AppTheme.xaml (fixed) : place in /Themes and merge in App.xaml -->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

  <!-- ========================================================= -->
  <!--                      COLOR PALETTE                        -->
  <!-- ========================================================= -->
  <Color x:Key="Color.Primary">#2B6CA3</Color>
  <Color x:Key="Color.Primary.Dark">#1E4D74</Color>
  <Color x:Key="Color.Accent">#00B7FF</Color>
  <Color x:Key="Color.Success">#2ECC71</Color>
  <Color x:Key="Color.Warning">#F39C12</Color>
  <Color x:Key="Color.Danger">#E74C3C</Color>

  <Color x:Key="Color.Bg">#F7F9FC</Color>
  <Color x:Key="Color.Card">#FFFFFFFF</Color>
  <Color x:Key="Color.Border">#22000000</Color>

  <Color x:Key="Color.Text">#111827</Color>
  <Color x:Key="Color.Text.Secondary">#6B7280</Color>
  <Color x:Key="Color.Text.Inverted">#FFFFFFFF</Color>

  <!-- Brushes -->
  <SolidColorBrush x:Key="Brush.Primary" Color="{StaticResource Color.Primary}"/>
  <SolidColorBrush x:Key="Brush.Primary.Dark" Color="{StaticResource Color.Primary.Dark}"/>
  <SolidColorBrush x:Key="Brush.Accent" Color="{StaticResource Color.Accent}"/>
  <SolidColorBrush x:Key="Brush.Success" Color="{StaticResource Color.Success}"/>
  <SolidColorBrush x:Key="Brush.Warning" Color="{StaticResource Color.Warning}"/>
  <SolidColorBrush x:Key="Brush.Danger" Color="{StaticResource Color.Danger}"/>

  <SolidColorBrush x:Key="Brush.Bg" Color="{StaticResource Color.Bg}"/>
  <SolidColorBrush x:Key="Brush.Card" Color="{StaticResource Color.Card}"/>
  <SolidColorBrush x:Key="Brush.Border" Color="{StaticResource Color.Border}"/>

  <SolidColorBrush x:Key="Brush.Text" Color="{StaticResource Color.Text}"/>
  <SolidColorBrush x:Key="Brush.Text.Secondary" Color="{StaticResource Color.Text.Secondary}"/>
  <SolidColorBrush x:Key="Brush.Text.Inverted" Color="{StaticResource Color.Text.Inverted}"/>

  <!-- Base text styling via TextBlock style (no loose Setters in dictionary) -->
  <Style TargetType="TextBlock">
    <Setter Property="FontFamily" Value="Segoe UI"/>
    <Setter Property="FontSize" Value="14"/>
    <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
  </Style>
    <!-- Modern DatePicker -->
    <!-- Modern DatePicker (with required PART_Popup so dropdown works) -->
    <Style x:Key="ModernDatePicker" TargetType="DatePicker">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#33000000"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="6,4"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Foreground" Value="#111827"/>
        <Setter Property="Height" Value="32"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DatePicker">
                    <Grid>
                        <!-- background chrome behind content -->
                        <Border x:Name="Chrome"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="6"/>

                        <!-- content row: textbox + button -->
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="28"/>
                            </Grid.ColumnDefinitions>

                            <!-- editable display -->
                            <DatePickerTextBox x:Name="PART_TextBox"
                                           Grid.Column="0"
                                           Background="Transparent"
                                           BorderThickness="0"
                                           Foreground="{TemplateBinding Foreground}"
                                           VerticalContentAlignment="Center"
                                           Padding="2,0,2,0"/>

                            <!-- drop button -->
                            <Button x:Name="PART_Button"
                                Grid.Column="1"
                                Focusable="False"
                                Background="Transparent"
                                BorderThickness="0"
                                Cursor="Hand">
                                <Path Data="M0,0 L6,6 L12,0"
                                  Stroke="#444"
                                  StrokeThickness="1.6"
                                  StrokeEndLineCap="Square"
                                  Width="12" Height="6"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"/>
                            </Button>
                        </Grid>

                        <!-- REQUIRED popup -->
                        <Popup x:Name="PART_Popup"
                           Placement="Bottom"
                           StaysOpen="False"
                           AllowsTransparency="True"
                           Focusable="False"
                           IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}">
                            <Border CornerRadius="6"
                                Background="White"
                                BorderBrush="#33000000"
                                BorderThickness="1"
                                SnapsToDevicePixels="True">
                                <Calendar x:Name="PART_Calendar"
                                      Margin="2"
                                      IsTodayHighlighted="{TemplateBinding IsTodayHighlighted}"
                                      DisplayDateStart="{TemplateBinding DisplayDateStart}"
                                      DisplayDateEnd="{TemplateBinding DisplayDateEnd}"
                                      DisplayDate="{Binding DisplayDate, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      SelectedDate="{Binding SelectedDate, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      FirstDayOfWeek="{TemplateBinding FirstDayOfWeek}"/>
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="#66000000"/>
                        </Trigger>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="#1E90FF"/>
                            <Setter TargetName="Chrome" Property="BorderThickness" Value="1.4"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Chrome" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ========================================================= -->
    <!--       Modern Tooth ContextMenu (for ToothWindow)          -->
    <!-- ========================================================= -->
    <Style x:Key="ModernToothContextMenu" TargetType="ContextMenu">
        <Setter Property="Background" Value="DarkGray"/>
        <Setter Property="BorderBrush" Value="#2C2D33"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="6"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10"
                        Effect="{DynamicResource DropShadow}">
                        <ScrollViewer CanContentScroll="True">
                            <StackPanel IsItemsHost="True"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- MenuItem style for modern flat look -->
    <Style x:Key="ModernToothMenuItem" TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Padding" Value="10,6"/>
        <Setter Property="Background" Value="Gray"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border x:Name="Bg"
                        Background="{TemplateBinding Background}"
                        CornerRadius="6"
                        Margin="1">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter x:Name="Icon" Margin="4,0" />
                            <ContentPresenter Grid.Column="1"
                                          ContentSource="Header"
                                          VerticalAlignment="Center"
                                          Margin="4,0,0,0"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Bg" Property="Background" Value="#333842"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Bg" Property="Background" Value="#454A56"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.4"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- subtle drop shadow resource -->
    <DropShadowEffect x:Key="DropShadow"
                  ShadowDepth="0"
                  BlurRadius="20"
                  Opacity="0.5"
                  Color="#000000"/>



    <!-- ========================================================= -->
  <!--                          BUTTON                           -->
  <!-- ========================================================= -->
  <Style x:Key="ModernButton" TargetType="Button">
    <Setter Property="Foreground" Value="{StaticResource Brush.Text.Inverted}"/>
    <Setter Property="Background" Value="{StaticResource Brush.Primary}"/>
    <Setter Property="BorderBrush" Value="{StaticResource Brush.Primary}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Padding" Value="12,6"/>
    <Setter Property="Cursor" Value="Hand"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Grid>
            <Border x:Name="Bg"
                    CornerRadius="12"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}">
              <ContentPresenter HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Margin="6,0,6,0"/>
            </Border>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter TargetName="Bg" Property="Background" Value="{StaticResource Brush.Primary.Dark}"/>
              <Setter Property="BorderBrush" TargetName="Bg" Value="{StaticResource Brush.Primary.Dark}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter TargetName="Bg" Property="RenderTransform">
                <Setter.Value>
                  <ScaleTransform ScaleX="0.99" ScaleY="0.99"/>
                </Setter.Value>
              </Setter>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter TargetName="Bg" Property="Opacity" Value="0.6"/>
              <Setter Property="Cursor" Value="Arrow"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="DangerButton" BasedOn="{StaticResource ModernButton}" TargetType="Button">
    <Setter Property="Background" Value="{StaticResource Brush.Danger}"/>
    <Setter Property="BorderBrush" Value="{StaticResource Brush.Danger}"/>
  </Style>
  <Style x:Key="SecondaryButton" BasedOn="{StaticResource ModernButton}" TargetType="Button">
    <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
    <Setter Property="Background" Value="{StaticResource Brush.Card}"/>
    <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
    <Setter Property="BorderThickness" Value="1"/>
  </Style>


    <!-- Modern Context Menu -->
    <Style x:Key="ModernContextMenu" TargetType="ContextMenu">
        <Setter Property="Background" Value="#F9FAFB"/>
        <Setter Property="BorderBrush" Value="#D1D5DB"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="6">
                        <ScrollViewer CanContentScroll="True">
                            <StackPanel IsItemsHost="True"/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Modern Menu Item (FIXED: single root Grid) -->
    <Style x:Key="ModernMenuItem" TargetType="MenuItem">
        <Setter Property="Foreground" Value="#111827"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <!-- SINGLE ROOT -->
                    <Grid>
                        <!-- Main surface -->
                        <Border x:Name="Bg"
                  Background="{TemplateBinding Background}"
                  CornerRadius="4">
                            <Grid Margin="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="24"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="16"/>
                                </Grid.ColumnDefinitions>

                                <!-- Icon -->
                                <ContentPresenter Grid.Column="0"
                                ContentSource="Icon"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"/>

                                <!-- Header text -->
                                <ContentPresenter Grid.Column="1"
                                ContentSource="Header"
                                RecognizesAccessKey="True"
                                VerticalAlignment="Center"
                                Margin="6,0,0,0"/>

                                <!-- Submenu arrow -->
                                <Path x:Name="Arrow"
                    Grid.Column="2"
                    Data="M0,0 L4,4 L0,8"
                    Stroke="#6B7280"
                    StrokeThickness="1.4"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Visibility="Collapsed"/>
                            </Grid>
                        </Border>

                        <!-- Submenu popup -->
                        <Popup x:Name="SubmenuPopup"
                 Placement="Right"
                 HorizontalOffset="2"
                 VerticalOffset="-2"
                 IsOpen="{TemplateBinding IsSubmenuOpen}"
                 AllowsTransparency="True"
                 Focusable="False"
                 PopupAnimation="Fade"
                 PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                            <Border Background="#F9FAFB"
                    BorderBrush="#D1D5DB"
                    BorderThickness="1"
                    CornerRadius="6">
                                <ScrollViewer CanContentScroll="True">
                                    <StackPanel IsItemsHost="True" Margin="2"/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <!-- hover -->
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Bg" Property="Background" Value="#E5E7EB"/>
                        </Trigger>

                        <!-- show arrow only for submenu headers -->
                        <Trigger Property="Role" Value="SubmenuHeader">
                            <Setter TargetName="Arrow" Property="Visibility" Value="Visible"/>
                        </Trigger>

                        <!-- auto-open submenu on hover (optional) -->
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Role" Value="SubmenuHeader"/>
                                <Condition Property="IsHighlighted" Value="True"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="IsSubmenuOpen" Value="True"/>
                        </MultiTrigger>

                        <!-- disabled -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.55"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ModernPasswordBox" TargetType="PasswordBox">
        <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
        <Setter Property="Background" Value="{StaticResource Brush.Card}"/>
        <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="10,6"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Grid>
                        <Border x:Name="Bd"
                  Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="8"/>
                        <ScrollViewer x:Name="PART_ContentHost" Margin="8,4,8,4"/>
                        <TextBlock x:Name="Watermark"
                     Text="{TemplateBinding Tag}"
                     Margin="12,0,8,0"
                     Foreground="{StaticResource Brush.Text.Secondary}"
                     Opacity="0.7"
                     IsHitTestVisible="False"
                     VerticalAlignment="Center"
                     Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Brush.Accent}"/>
                            <Setter TargetName="Bd" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <!-- show watermark when empty -->
                        <Trigger Property="TextBlock.Text" Value="">
                            <Setter TargetName="Watermark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- ========================================================= -->
  <!--                         TEXTBOX                           -->
  <!-- ========================================================= -->
  <Style x:Key="ModernTextBox" TargetType="TextBox">
    <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
    <Setter Property="Background" Value="{StaticResource Brush.Card}"/>
    <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Padding" Value="10,6"/>
    <Setter Property="SnapsToDevicePixels" Value="True"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="TextBox">
          <Grid>
            <Border x:Name="Bd"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="8"/>
            <ScrollViewer x:Name="PART_ContentHost" Margin="8,4,8,4"/>
            <TextBlock x:Name="Watermark"
                       Text="{TemplateBinding Tag}"
                       Margin="12,0,8,0"
                       Foreground="{StaticResource Brush.Text.Secondary}"
                       Opacity="0.7"
                       IsHitTestVisible="False"
                       VerticalAlignment="Center"
                       Visibility="Collapsed"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsKeyboardFocused" Value="True">
              <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource Brush.Accent}"/>
              <Setter TargetName="Bd" Property="BorderThickness" Value="2"/>
            </Trigger>
            <!-- show watermark when empty -->
            <Trigger Property="Text" Value="">
              <Setter TargetName="Watermark" Property="Visibility" Value="Visible"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <!-- ========================================================= -->
  <!--                         COMBOBOX                          -->
    <!-- Modern ComboBox (click anywhere to open; fully wired) -->
    <Style x:Key="ModernComboBox" TargetType="ComboBox">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="BorderBrush" Value="#33000000"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="6,4"/>
        <Setter Property="MinHeight" Value="32"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <!-- 1) BIG ToggleButton: whole header surface is clickable -->
                        <ToggleButton x:Name="ToggleButton"
                                  Background="{TemplateBinding Background}"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Padding="{TemplateBinding Padding}"
                                  IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  Focusable="False"
                                  HorizontalContentAlignment="Stretch"
                                  VerticalContentAlignment="Center">
                            <Border x:Name="Chrome" CornerRadius="6"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="34"/>
                                    </Grid.ColumnDefinitions>

                                    <!-- Selected item -->
                                    <ContentPresenter Grid.Column="0"
                                                  Margin="0"
                                                  VerticalAlignment="Center"
                                                  Content="{TemplateBinding SelectionBoxItem}"/>

                                    <!-- Arrow -->
                                    <Grid Grid.Column="1">
                                        <Path Data="M0,0 L6,6 L12,0"
                                          Stroke="#444" StrokeThickness="1.4"
                                          Width="12" Height="6"
                                          HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                                    </Grid>
                                </Grid>
                            </Border>
                        </ToggleButton>

                        <!-- 2) Popup (required) -->
                        <Popup x:Name="PART_Popup"
                           Placement="Bottom"
                           AllowsTransparency="True"
                           StaysOpen="False"
                           IsOpen="{TemplateBinding IsDropDownOpen}">
                            <Border CornerRadius="6"
                                Background="White"
                                BorderBrush="#33000000"
                                BorderThickness="1"
                                SnapsToDevicePixels="True">
                                <ScrollViewer CanContentScroll="True">
                                    <ItemsPresenter/>
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Chrome" Property="BorderBrush" Value="#66000000"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Chrome" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- ========================================================= -->
  <!--                        CONTAINERS                         -->
  <!-- ========================================================= -->
  <Style x:Key="Card" TargetType="Border">
    <Setter Property="CornerRadius" Value="12"/>
    <Setter Property="Background" Value="{StaticResource Brush.Card}"/>
    <Setter Property="BorderBrush" Value="{StaticResource Brush.Border}"/>
    <Setter Property="BorderThickness" Value="1"/>
    <Setter Property="Padding" Value="12"/>
  </Style>

  <!-- Headings -->
  <Style x:Key="H1" TargetType="TextBlock">
    <Setter Property="FontSize" Value="22"/>
    <Setter Property="FontWeight" Value="SemiBold"/>
    <Setter Property="Foreground" Value="{StaticResource Brush.Text}"/>
  </Style>
  <Style x:Key="H2" TargetType="TextBlock" BasedOn="{StaticResource H1}">
    <Setter Property="FontSize" Value="18"/>
    <Setter Property="FontWeight" Value="SemiBold"/>
  </Style>
  <Style x:Key="Caption" TargetType="TextBlock">
    <Setter Property="FontSize" Value="12"/>
    <Setter Property="Foreground" Value="{StaticResource Brush.Text.Secondary}"/>
  </Style>

</ResourceDictionary>
